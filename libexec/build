#!/bin/sh -u

cd "$(dirname "$0")"

__dotfiles_repo__build_filename="./$(basename "$0")"

while [ -L "$__dotfiles_repo__build_filename" ]; do
  __dotfiles_repo__build_filename="$(readlink "$__dotfiles_repo__build_filename")"

  cd "$(dirname "$__dotfiles_repo__build_filename")"

  __dotfiles_repo__build_filename="./$(basename "$__dotfiles_repo__build_filename")"
done

unset -v '__dotfiles_repo__build_filename'

cd '..'

[ "$PWD" != "$(pwd -P)" ] && cd "$(pwd -P)"

printf 'Cleaning up ... '

"$PWD/libexec/clean" > '/dev/null' 2>&1

echo 'done.'

printf 'Copying source files ... '

cp -R "$PWD/src" "$PWD/build" > '/dev/null' 2>&1

__dotfiles_repo__build_cp_exit_status=$?

if [ $__dotfiles_repo__build_cp_exit_status -eq 0 ]; then
  echo 'succeeded.'

  unset -v '__dotfiles_repo__build_cp_exit_status'
else
  echo 'failed.'

  exit $__dotfiles_repo__build_cp_exit_status
fi

if [ -e "$PWD/vendor/git/github.com/ChristianGrete/dotfiles-cli/dist" ]; then
  printf 'Making target directory for CLI ... '

  mkdir "$PWD/build/opt/dotfiles.christiangrete.com" > '/dev/null' 2>&1

  __dotfiles_repo__build_mkdir_exit_status=$?

  if [ $__dotfiles_repo__build_mkdir_exit_status -eq 0 ]; then
    echo 'succeeded.'

    unset -v '__dotfiles_repo__build_mkdir_exit_status'
  else
    echo 'failed.'

    exit $__dotfiles_repo__build_mkdir_exit_status
  fi

  printf 'Copying CLI artifact to target directory ... '

  cp -R "$PWD/vendor/git/github.com/ChristianGrete/dotfiles-cli/dist" \
    "$PWD/build/opt/dotfiles.christiangrete.com/cli" > '/dev/null' 2>&1

  __dotfiles_repo__build_cp_exit_status=$?

  if [ $__dotfiles_repo__build_cp_exit_status -eq 0 ]; then
    echo 'succeeded.'

    unset -v '__dotfiles_repo__build_cp_exit_status'
  else
    echo 'failed.'

    exit $__dotfiles_repo__build_cp_exit_status
  fi
fi
